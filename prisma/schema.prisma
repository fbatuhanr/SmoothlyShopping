datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  brand       String
  price       Float
  category    String
  inStock     Boolean
  image       String
  reviews     Review[]
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  rating    Int
  comment   String
  createdAt DateTime @default(now())

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updateAt       DateTime  @updatedAt
  role           Role      @default(USER)

  deliveryAddressId String? @db.ObjectId @default("")
  billingAddressId  String? @db.ObjectId @default("")

  accounts Account[]
  reviews  Review[]

  addresses Address[]
}

enum Role {
  USER
  ADMIN
}

model Address {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId

  name       String
  address    String
  city       String
  state      String
  country    String
  zipcode    String
  phone      String
  additional String @default("")

  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
